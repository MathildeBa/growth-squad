{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/mathilde/Desktop/growth-squad/pages/euCountries.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport LayoutApp from \"../components/LayoutApp\";\n\nvar Country = function Country(_ref) {\n  var name = _ref.name,\n      capital = _ref.capital,\n      alpha2Code = _ref.alpha2Code;\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, name, \" , \", capital, \" , \", alpha2Code);\n};\n\nvar euCountries = function euCountries(_ref2) {\n  var countries = _ref2.countries;\n  return __jsx(LayoutApp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"All countries of the World\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" //I would have made a condition : if regionalBloc.acronym === true then display nountry.name.\", countries.map(function (country) {\n    return __jsx(Country, {\n      name: country.name,\n      capital: country.capital,\n      alpha2Code: country.alpha2Code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }))));\n};\n\neuCountries.getInitialProps = function _callee() {\n  var res, countries;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://restcountries.eu/rest/v2/all?fields=name;capital;alpha2Code;regionalbloc'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          countries = _context.sent;\n          console.log('showing the data: ', countries);\n          return _context.abrupt(\"return\", {\n            countries: countries\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default euCountries;","map":{"version":3,"sources":["/home/mathilde/Desktop/growth-squad/pages/euCountries.js"],"names":["fetch","LayoutApp","Country","name","capital","alpha2Code","euCountries","countries","map","country","getInitialProps","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAoC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AACnD,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,IAAL,SAAeC,OAAf,SAA6BC,UAA7B,CADH;AAGA,CAJD;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAEC,SAAF,SAAEA,SAAF;AAAA,SAChB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGAEQA,SAAS,CAACC,GAAV,CAAc,UAAAC,OAAO;AAAA,WACjB,MAAC,OAAD;AAAS,MAAA,IAAI,EAAEA,OAAO,CAACN,IAAvB;AAA6B,MAAA,OAAO,EAAEM,OAAO,CAACL,OAA9C;AAAuD,MAAA,UAAU,EAAEK,OAAO,CAACJ,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAArB,CAFR,CAFJ,CADJ,CADgB;AAAA,CAApB;;AAeAC,WAAW,CAACI,eAAZ,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAERV,KAAK,CAAC,kFAAD,CAFG;;AAAA;AAEpBW,UAAAA,GAFoB;AAAA;AAAA,2CAIFA,GAAG,CAACC,IAAJ,EAJE;;AAAA;AAIpBL,UAAAA,SAJoB;AAM1BM,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,SAAlC;AAN0B,2CAQpB;AACFA,YAAAA,SAAS,EAATA;AADE,WARoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AAaA,eAAeD,WAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport LayoutApp from \"../components/LayoutApp\";\n\nconst Country = ({ name , capital , alpha2Code}) => {\n\treturn (\n    <li>{name} , { capital } , { alpha2Code }</li>\n    )\n}\n\nconst euCountries = ({countries}) => (\n    <LayoutApp>\n        <div>\n            <h1>All countries of the World</h1>\n            <ul> //I would have made a condition : if regionalBloc.acronym === true then display nountry.name.\n                {\n                    countries.map(country=> \n                        <Country name={country.name} capital={country.capital} alpha2Code={country.alpha2Code}/>\n                    )\n                }\n            </ul>\n        </div>\n    </LayoutApp>\n);\n\neuCountries.getInitialProps = async function () {\n    //fetching of the API\n    const res = await fetch('https://restcountries.eu/rest/v2/all?fields=name;capital;alpha2Code;regionalbloc');\n    // await to map the json\n    const countries = await res.json();\n\n    console.log('showing the data: ', countries);\n\n    return{\n        countries\n    }; \n};\n\nexport default euCountries ;"]},"metadata":{},"sourceType":"module"}